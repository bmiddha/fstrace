
vfs_bpfel.o:	file format elf64-bpf

Disassembly of section fexit/vfs_open:

0000000000000000 <vfs_open_exit>:
       0:	79 16 08 00 00 00 00 00	r6 = *(u64 *)(r1 + 8)
       1:	85 00 00 00 0e 00 00 00	call 14
       2:	bf 08 00 00 00 00 00 00	r8 = r0
       3:	79 67 a0 00 00 00 00 00	r7 = *(u64 *)(r6 + 160)
       4:	b7 09 00 00 00 00 00 00	r9 = 0
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	b7 02 00 00 c8 5d 00 00	r2 = 24008
       8:	b7 03 00 00 00 00 00 00	r3 = 0
       9:	85 00 00 00 83 00 00 00	call 131
      10:	15 00 3e 00 00 00 00 00	if r0 == 0 goto +62 <LBB0_14>
      11:	c7 08 00 00 20 00 00 00	r8 s>>= 32
      12:	7b 80 00 00 00 00 00 00	*(u64 *)(r0 + 0) = r8
      13:	b7 06 00 00 64 00 00 00	r6 = 100
      14:	7b 0a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r0
      15:	05 00 22 00 00 00 00 00	goto +34 <LBB0_2>

0000000000000080 <LBB0_9>:
      16:	61 72 24 00 00 00 00 00	r2 = *(u32 *)(r7 + 36)
      17:	07 04 00 00 08 00 00 00	r4 += 8
      18:	bf 41 00 00 00 00 00 00	r1 = r4
      19:	0f 21 00 00 00 00 00 00	r1 += r2
      20:	25 01 02 00 47 1f 00 00	if r1 > 8007 goto +2 <LBB0_11>
      21:	b7 01 00 00 40 1f 00 00	r1 = 8000
      22:	2d 21 04 00 00 00 00 00	if r1 > r2 goto +4 <LBB0_12>

00000000000000b8 <LBB0_11>:
      23:	18 01 00 00 42 00 00 00 00 00 00 00 00 00 00 00	r1 = 66 ll
      25:	b7 02 00 00 13 00 00 00	r2 = 19
      26:	05 00 2a 00 00 00 00 00	goto +42 <LBB0_4>

00000000000000d8 <LBB0_12>:
      27:	bf 01 00 00 00 00 00 00	r1 = r0
      28:	0f 41 00 00 00 00 00 00	r1 += r4
      29:	85 00 00 00 71 00 00 00	call 113
      30:	bf 08 00 00 00 00 00 00	r8 = r0
      31:	b7 01 00 00 18 00 00 00	r1 = 24
      32:	0f 17 00 00 00 00 00 00	r7 += r1
      33:	bf a1 00 00 00 00 00 00	r1 = r10
      34:	07 01 00 00 f8 ff ff ff	r1 += -8
      35:	b7 02 00 00 08 00 00 00	r2 = 8
      36:	bf 73 00 00 00 00 00 00	r3 = r7
      37:	85 00 00 00 71 00 00 00	call 113
      38:	79 a0 f0 ff 00 00 00 00	r0 = *(u64 *)(r10 - 16)
      39:	0f 89 00 00 00 00 00 00	r9 += r8
      40:	79 a7 f8 ff 00 00 00 00	r7 = *(u64 *)(r10 - 8)
      41:	07 06 00 00 ff ff ff ff	r6 += -1
      42:	bf 61 00 00 00 00 00 00	r1 = r6
      43:	67 01 00 00 20 00 00 00	r1 <<= 32
      44:	77 01 00 00 20 00 00 00	r1 >>= 32
      45:	55 01 04 00 00 00 00 00	if r1 != 0 goto +4 <LBB0_2>

0000000000000170 <LBB0_13>:
      46:	bf 01 00 00 00 00 00 00	r1 = r0
      47:	b7 02 00 00 00 00 00 00	r2 = 0
      48:	85 00 00 00 84 00 00 00	call 132
      49:	05 00 17 00 00 00 00 00	goto +23 <LBB0_14>

0000000000000190 <LBB0_2>:
      50:	55 07 04 00 00 00 00 00	if r7 != 0 goto +4 <LBB0_5>
      51:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      53:	b7 02 00 00 10 00 00 00	r2 = 16
      54:	05 00 0e 00 00 00 00 00	goto +14 <LBB0_4>

00000000000001b8 <LBB0_5>:
      55:	79 73 28 00 00 00 00 00	r3 = *(u64 *)(r7 + 40)
      56:	55 03 04 00 00 00 00 00	if r3 != 0 goto +4 <LBB0_7>
      57:	18 01 00 00 10 00 00 00 00 00 00 00 00 00 00 00	r1 = 16 ll
      59:	b7 02 00 00 1d 00 00 00	r2 = 29
      60:	05 00 08 00 00 00 00 00	goto +8 <LBB0_4>

00000000000001e8 <LBB0_7>:
      61:	bf 94 00 00 00 00 00 00	r4 = r9
      62:	67 04 00 00 20 00 00 00	r4 <<= 32
      63:	77 04 00 00 20 00 00 00	r4 >>= 32
      64:	b7 01 00 00 41 1f 00 00	r1 = 8001
      65:	2d 41 ce ff 00 00 00 00	if r1 > r4 goto -50 <LBB0_9>
      66:	18 01 00 00 2d 00 00 00 00 00 00 00 00 00 00 00	r1 = 45 ll
      68:	b7 02 00 00 15 00 00 00	r2 = 21

0000000000000228 <LBB0_4>:
      69:	bf 06 00 00 00 00 00 00	r6 = r0
      70:	85 00 00 00 06 00 00 00	call 6
      71:	bf 60 00 00 00 00 00 00	r0 = r6
      72:	05 00 e5 ff 00 00 00 00	goto -27 <LBB0_13>

0000000000000248 <LBB0_14>:
      73:	b7 00 00 00 00 00 00 00	r0 = 0
      74:	95 00 00 00 00 00 00 00	exit
